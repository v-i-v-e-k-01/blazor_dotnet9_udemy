@page "/LearnBlazor/DemoProduct"
<h2 class="text-primary">DemoProduct</h2>
<p>Favorite Count: @FavoriteCount</p>
@if (SelectedProduct != null)
{
    <p>
        Selected Product: @SelectedProduct
    </p>
}
<div class=" p-2 mt-2 ">
    <div class="row">
        @foreach (var product in ProductList)
        {
            <_IndividualProduct Product="@product" OnFavoriteUpdated="FavoriteCountChange" OnSelectionChange="UpdateSelectedProduct">

            </_IndividualProduct>
        }
    </div>
    <div class="row pt-4">
        <!--    <input type="button" class="btn btn-success" style="width:100px" value="Counter"  @onclick="()=>IncrementCount(5)"/> -->
        <input type="button" class="btn btn-success" style="width:100px" value="Counter" />
        Count: @Count
    </div>
</div>

@code {
    private bool showProp;
    public int Count { get; set; } = 0;
    public int FavoriteCount { get; set; } = 0;
    private string SelectedProduct { get; set; } = string.Empty;

    protected void UpdateSelectedProduct(string productName)
    {
        SelectedProduct = productName;
    }

    List<Product> ProductList = new();

    protected override void OnInitialized()
    {
        ProductList.Add(new()
            {
                Id = 1,
                Name = "Midnight Blaze",
                IsActive = false,
                Price = 5.99,
                ProductProperties = new List<Product_Prop>()
            {
                new Product_Prop { Id = 1, Key = "Flavor", Value = "Rose"},
                new Product_Prop { Id = 2, Key = "Size", Value = "20oz"},
                new Product_Prop { Id = 3, Key = "Color", Value = "Purple" }
            }
            });

        ProductList.Add(new()
            {
                Id = 2,
                Name = "Blossom Lily",
                IsActive = true,
                Price = 10.59,
                ProductProperties = new List<Product_Prop>()
            {
                new Product_Prop { Id = 1, Key = "Flavor", Value = "Lily" },
                new Product_Prop { Id = 2, Key = "Size", Value = "18oz" },
                new Product_Prop {Id = 3,Key = "Color",Value = "White"}
            }
            });

    }

    // private void IncrementCount(int incr)
    // {
    //     Count+=incr;
    // }

    private void DeleteProduct(int productId)
    {
        ProductList.RemoveAll(item => item.Id == productId);
    }

    protected void FavoriteCountChange(bool isSelected)
    {
        if (isSelected)
        {
            FavoriteCount++;
        }
        else
        {
            FavoriteCount--;
        }
    }

}
